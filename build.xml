<project name="HoborgLabs Dashboard" default="help" basedir=".">

	<!-- optional environmental settings/overrides -->
	<property file="build.properties" />
	<property environment="env" />

	<!-- set default values if not already set in build.properties -->
	<property name="dir.base" location="." />
	<property name="dir.dist" value="${dir.base}/dist" />
	<property name="dir.vendor" value="${dir.base}/vendor" />
	<property name="dir.logs" value="${dir.base}/logs" />


	<!-- Commands defaults -->
	<property name="cmd.php" value="php" />
	<property name="cmd.node" value="node" />
	<property name="cmd.npm" value="npm" />
	<property name="cmd.git" value="git" />
	<property name="cmd.composer" value="${dir.base}/composer.phar" />
	<property name="cmd.recess" value="${dir.base}/node_modules/recess/bin/recess" />

	<available file="${cmd.php}" filepath="${env.PATH}" property="php.present" />
	<available file="${cmd.node}" filepath="${env.PATH}" property="node.present" />
	<available file="${cmd.npm}" filepath="${env.PATH}" property="npm.present" />

	<available file="${cmd.composer}" property="composer.present" />
	<available file="${cmd.recess}" property="recess.present" />




	<!--
		Main targets
		* validate (validate.dev)
		* test
		* build
		* clean
		* help
	-->
	<target name="validate"
		description="Validates project."
	>
		<fail unless="php.present" message="`php` not found! Please install - http://php.org/"/>

		<antcall>
			<target name="validate.dependencies" />
		</antcall>
	</target>

	<target name="validate.dev"
		description="Validates project for development."
	>
		<fail unless="php.present" message="`php` not found! Please install - http://php.org/"/>
		<fail unless="node.present" message="`node` not found! Please install - http://nodejs.org/"/>
		<fail unless="npm.present" message="`npm` not found!?"/>

		<antcall>
			<target name="validate.dev.dependencies" />
		</antcall>
	</target>

	<target name="build"
		description="Builds project."
	>
		<antcall>
			<target name="clean" />
			<target name="validate.dev" />
			<target name="test" />
			<target name="build.css" />
			<target name="build.js" />
		</antcall>
	</target>

	<target name="release"
		description="Release new version."
		depends="build"
	>
		<!--
			This Target requires external scripts. Please do not run it from dev environment
		-->
		<fail unless="dir.ci-scripts"
			message="Property `dir.ci-scripts` not set. Please set it before running this target" />

		<!-- default branch. Overwrite in build.properties -->
		<property name="release.branch" location="master" />

		<exec executable="${dir.ci-scripts}/git/add-and-commit" failonerror="true">
			<arg line="-b '${release.branch}'" />
			<arg line="-d './dist'" />
			<arg line="-m 'CI automated bugfix release'" />
		</exec>

		<exec executable="${cmd.php}" dir="${dir.base}" failonerror="true" outputproperty="version">
			<arg line="-r" />
			<arg value="echo array_shift(file('${dir.base}/VERSION'));" />
		</exec>

		<exec executable="${dir.ci-scripts}/git/tag-next-version" failonerror="true">
			<arg line="-b '${release.branch}'" />
			<arg line="-v ${version}" />
			<arg line="-c 'CHANGELOG'" />
			<arg line="-p" />
		</exec>
	</target>

	<target name="test"
		description="Run project tests."
	>
		<antcall target="phpunit" />
	</target>

	<target name="clean"
		description="Clean up workspace"
	>
		<delete dir="${dir.logs}" />
		<delete dir="${dir.dist}" />
	</target>

	<target name="help"
		description="Prints this help"
	>
		<exec executable="ant">
			<arg value="-p" />
		</exec>
	</target>




	<!--
		Project Validation
	-->
	<target name="validate.dependencies"
		description="Installs or updates project dependencies."
		depends="-install-composer"
	>
		<echo level="info">Composer update (--no-dev)</echo>
		<exec executable="${cmd.php}" failonerror="true">
			<arg line="${cmd.composer}" />
			<arg line="update" />
			<arg line="--no-dev" />
			<arg line="--no-interaction" />
		</exec>
	</target>

	<target name="validate.dev.dependencies"
		description="Installs or updates project development dependencies."
		depends="-install-composer, -install-recess"
	>
		<echo level="info">Composer update</echo>
		<exec executable="${cmd.php}" failonerror="true">
			<arg line="${cmd.composer}" />
			<arg line="update" />
			<arg line="--no-interaction" />
		</exec>
	</target>




	<!--
		Buid steps
	-->
	<target name="build.js"
		description="Compiles and minifies JS"
	>
		<echo>Building ${dir.build.dist}/htdocs/static/scripts/hoborglabs/dashboard.js</echo>
		<mkdir dir="${dir.dist}/public/static/scripts/hoborglabs"/>
		<exec executable="${cmd.node}">
			<arg line="scripts/r.js" />
			<arg line="-o" />
			<arg line="${dir.base}/scripts/dashboard.build.js" />
		</exec>

		<exec executable="${cmd.node}">
			<arg line="scripts/r.js" />
			<arg line="-o" />
			<arg line="${dir.base}/scripts/dashboard.build.js" />
			<arg line="optimize=none" />
			<arg line="out=${dir.dist}/public/static/scripts/hoborglabs/dashboard.unminified.js" />
		</exec>
	</target>

	<target name="build.css"
		description="Compiles and minifies CSS"
		depends="-install-recess"
	>
		<property name="cmd.recess" value="recess" />
		<mkdir dir="${dir.dist}/public/static/styles/hoborglabs/css" />

		<echo level="info">Building ${dir.dist}/public/static/styles/hoborglabs/css/dashboard.min.css</echo>
		<exec executable="${cmd.recess}" output="${dir.dist}/public/static/styles/hoborglabs/css/dashboard.min.css">
			<arg line="--compress" />
			<arg line="${dir.base}/styles/less/dashboard.less" />
		</exec>

		<echo level="info">Building ${dir.dist}/public/static/styles/hoborglabs/css/dashboard.css</echo>
		<exec executable="${cmd.recess}" output="${dir.dist}/public/static/styles/hoborglabs/css/dashboard.css">
			<arg line="--compile" />
			<arg line="${dir.base}/styles/less/dashboard.less" />
		</exec>
	</target>




	<!--
		Test and code analysis
	-->
	<target name="phpunit" description="Runs PHPUnit tests.">
		<mkdir dir="${dir.logs}/phpunit" />

		<exec dir="${dir.base}" executable="${dir.vendor}/bin/phpunit" failonerror="true">
			<arg line="-c phpunit.xml" />
			<arg line="--log-junit ${dir.logs}/phpunit/phpunit.xml" />
			<arg line="--coverage-clover ${dir.logs}/phpunit/coverage.xml" />
			<arg line="--testdox-text ${dir.logs}/phpunit/phpunit.txt" />
		</exec>
	</target>




	<!--
		trys to install composer locally using composer's install script
	-->
	<target name="-install-composer" unless="composer.present">
		<exec dir="${dir.base}" executable="bash" failonerror="true">
			<arg value="-c" />
			<arg value="curl -sSk https://getcomposer.org/installer | php -- --disable-tls" />
		</exec>
	</target>
	<target name="-install-recess" unless="recess.present">
		<exec executable="npm">
			<arg value="install" />
			<arg value="recess" />
		</exec>
		<property name="cmd.recess" value="${dir.base}/node_modules/.bin/recess" />
	</target>

</project>
